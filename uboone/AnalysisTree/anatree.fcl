#include "services.fcl"
#include "caldata.fcl"
#include "hitfindermodules.fcl"
#include "clustermodules.fcl"
#include "trackfindermodules.fcl"
#include "vertexfindermodules.fcl"
#include "calorimetry_microboone.fcl"
#include "particleid.fcl"
#include "analysistreemodule.fcl"
#include "filters.fcl"

process_name: AnaTree

services:
{
  #Load the service that manages root files for histograms.
  TFileService: { fileName: "standard_reco_hist.root" }
  Timing:       {}
  SimpleMemoryCheck:     { ignoreTotal: 1 }     #default is one
  RandomNumberGenerator: {}                     #ART native random number generator
  user:         @local::microboone_services
  message:      @local::standard_error
}

#source is now a root file
source:
{
  module_type: RootInput
  maxEvents:  -1            # Number of events to create
}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "standard_reco.root"    #default file name, can override from command line with -o or --output
 } 
}

physics:
{
 producers:{### calorimetry producers
  trackkalmanhitcalo:  @local::microboone_calomc
  trackkalspscalo:     @local::microboone_calomc
  beziercalo:          @local::microboone_beziercalorimetry}
 filters:  {} 
 analyzers:{}
 
 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 reco: [ trackkalmanhitcalo, trackkalspscalo, beziercalo ]
 ana:  [ analysistree ]
 
 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [reco] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [ stream1, ana ] 
 #end_paths:     [  ana ] 
}

# define the list of LArSoft modules to run through the simulate path

physics.producers.calo:          @local::microboone_calomc
physics.analyzers.analysistree:  @local::microboone_analysistree
#physics.producers.filter.BadEvents:    [5]
#physics.producers.filter.BadRuns:      [10]
#physics.producers.matchtracks.lartracks:                "spacepts"
#physics.producers.calo.TrackModuleLabel:                 ["trackkalmanhit","trackkalsps","beziertracker"]
physics.producers.trackkalmanhitcalo.TrackModuleLabel:          "trackkalmanhit"
physics.producers.trackkalspscalo.TrackModuleLabel:             "trackkalsps"
physics.producers.beziercalo.BTrackModuleLabel:                 "beziertracker"

#physics.producers.calo.UseArea:                         true
#physics.producers.calo.CaloAlg.CaloUseModBox:            true
#physics.producers.pid.TrackModuleLabel:                 "spacepts"
#physics.producers.pid.CalorimetryModuleLabel:           "calo"
physics.analyzers.analysistree.TrackModuleLabel:        ["trackkalmanhit", "trackkalsps", "beziertracker"]
physics.analyzers.analysistree.CalorimetryModuleLabel:  ["trackkalmanhitcalo", "trackkalspscalo", "beziercalo"]
physics.analyzers.analysistree.GenieGenModuleLabel:     "generator"
physics.analyzers.analysistree.POTModuleLabel:          "generator"
#physics.analyzers.analysistree.ParticleIDModuleLabel:   "pid"


