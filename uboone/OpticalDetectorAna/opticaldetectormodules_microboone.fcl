#include "opticaldetectormodules.fcl"
#include "ophit_microboone.fcl"
BEGIN_PROLOG

microboone_simphotoncounter: @local::standard_simphotoncounter
microboone_opdigi:           @local::standard_opdigi
microboone_tracktimeassoc:   @local::standard_tracktimeassoc

#
# SimpleFlashFinder module
#
microboone_simple_flash:
{
 module_type   : "SimpleFlashFinder"
 OpHitProducer : "ophit"
 HGPMTChannels : [  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 , 31]
}

microboone_simple_flash_sat: @local::microboone_simple_flash
microboone_simple_flash_sat.OpHitProducer: "ophitSat"

microboone_simple_flash_sat_beam: @local::microboone_simple_flash
microboone_simple_flash_sat_beam.OpHitProducer: "ophitBeam"

microboone_simple_flash_sat_cosmic: @local::microboone_simple_flash
microboone_simple_flash_sat_cosmic.OpHitProducer: "ophitCosmic"

#
# OpHitFinder module
#

microboone_ophit_lowgain:
{
   module_type:    "OpHitFinder"
   GenModule:      "generator"
   InputModule:    "pmtreadout"
   InputLabels:    [ "" ]
   ChannelMasks:   []
   HitThreshold:   0.2  # PE
   AreaToPE:       true # Use area to calculate number of PEs
   SPEArea:        12.0 # If AreaToPE is true, this number is 
                        # used as single PE area (in ADC counts)
   reco_man:       @local::standard_preco_manager
   HitAlgoPset:    @local::ubopt_algo_hit_slidingwindow
   PedAlgoPset:    @local::ubopt_algo_pedestal_ub
}

microboone_ophit_highgain:
{
   module_type:    "OpHitFinder"
   GenModule:      "generator"
   InputModule:    "pmtreadout"
   InputLabels:    [ "" ]
   ChannelMasks:   []
   HitThreshold:   0.2  # PE
   AreaToPE:       true # Use area to calculate number of PEs
   SPEArea:        120  # If AreaToPE is true, this number is 
                        # used as single PE area (in ADC counts)
   reco_man:       @local::standard_preco_manager
   HitAlgoPset:    @local::ubopt_algo_hit_slidingwindow
   PedAlgoPset:    @local::ubopt_algo_pedestal_ub
}

microboone_ophit_beam_highgain: @local::microboone_ophit_highgain
microboone_ophit_beam_highgain.InputLabels:  ["OpdetBeamHighGain"]
microboone_ophit_beam_highgain.ChannelMasks: [ 32,  33,  34,  35,  36,  37,  38,  39,  40,  41,  42,  43,  44,  45,  46,  47]

microboone_ophit_beam_lowgain: @local::microboone_ophit_lowgain
microboone_ophit_beam_lowgain.InputLabels:   ["OpdetBeamLowGain"]
microboone_ophit_beam_lowgain.ChannelMasks:  [ 132,  133,  134,  135,  136,  137,  138,  139,  140,  141,  142,  143,  144,  145,  146,  147]

microboone_ophit_cosmic_highgain: @local::microboone_ophit_highgain
microboone_ophit_cosmic_highgain.InputLabels:  ["OpdetCosmicHighGain"]
microboone_ophit_cosmic_highgain.ChannelMasks: [ 232,  233,  234,  235,  236,  237,  238,  239,  240,  242,  242,  243,  244,  245,  246,  247]

microboone_ophit_cosmic_lowgain: @local::microboone_ophit_lowgain
microboone_ophit_cosmic_lowgain.InputLabels:  ["OpdetCosmicLowGain"]
microboone_ophit_cosmic_lowgain.ChannelMasks: [ 332,  333,  334,  335,  336,  337,  338,  339,  340,  342,  342,  343,  344,  345,  346,  347]

microboone_ophit:   @local::microboone_ophit_beam_highgain

#
# OpHit on saturation output
#
microboone_ophit_saturation: @local::microboone_ophit
microboone_ophit_saturation.InputModule: "saturation"
microboone_ophit_saturation.InputLabels:  [""]
microboone_ophit_saturation.ChannelMasks: [ 32,  33,  34,  35,  36,  37,  38,  39,  40,  41,  42,  43,  44,  45,  46,  47,
                                                 100, 101, 102, 103, 104, 105, 106, 107, 108, 109,
                                                 110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
                                                 120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
                                                 130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
                                                 140, 141, 142, 143, 144, 145, 146, 147 ]

microboone_ophit_saturation_beam: @local::microboone_ophit
microboone_ophit_saturation_beam.InputModule: "saturation"
microboone_ophit_saturation_beam.InputLabels:  ["OpdetBeamHighGain"]
microboone_ophit_saturation_beam.ChannelMasks: [ 32,  33,  34,  35,  36,  37,  38,  39,  40,  41,  42,  43,  44,  45,  46,  47,
                                                 100, 101, 102, 103, 104, 105, 106, 107, 108, 109,
                                                 110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
                                                 120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
                                                 130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
                                                 140, 141, 142, 143, 144, 145, 146, 147 ]

microboone_ophit_saturation_cosmic: @local::microboone_ophit
microboone_ophit_saturation_cosmic.InputModule: "saturation"
microboone_ophit_saturation_cosmic.InputLabels:  ["OpdetCosmicHighGain"]
microboone_ophit_saturation_cosmic.ChannelMasks: [ 32,  33,  34,  35,  36,  37,  38,  39,  40,  41,  42,  43,  44,  45,  46,  47,
                                                   100, 101, 102, 103, 104, 105, 106, 107, 108, 109,
                                                   110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
                                                   120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
                                                   130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
                                                   140, 141, 142, 143, 144, 145, 146, 147 ]
#
# OpFlashFinder module
#

microboone_opflash_lowgain:
{
   module_type:    "OpFlashFinder"
   InputModule:    "microboone_ophit_lowgain"
   BinWidth:       1   # us | Pulse finding parameters
   FlashThreshold: 5   # PE
   WidthTolerance: 0.5 # unitless
   TrigCoinc:      2.5 # in microseconds!
}

microboone_opflash_highgain:
{
   module_type:    "OpFlashFinder"
   InputModule:    "microboone_ophit_highgain"
   BinWidth:       1   # us | Pulse finding parameters
   FlashThreshold: 5   # PE
   WidthTolerance: 0.5 # unitless
   TrigCoinc:      2.5 # in microseconds!
}

microboone_opflash_beam_highgain: @local::microboone_opflash_highgain
microboone_opflash_beam_highgain.InputModule: "ophit"

microboone_opflash_beam_lowgain: @local::microboone_opflash_lowgain
microboone_opflash_beam_lowgain.InputModule: "ophitLow"

microboone_opflash_cosmic_highgain: @local::microboone_opflash_highgain
microboone_opflash_cosmic_highgain.InputModule: "ophitCosmic"

microboone_opflash_cosmic_lowgain: @local::microboone_opflash_lowgain
microboone_opflash_cosmic_lowgain.InputModule: "ophitCosmicLow"

microboone_opflash: @local::microboone_opflash_beam_highgain
microboone_opflash.InputModule: "ophit"

#
# OpFlash on saturation output
#
microboone_opflash_saturation: @local::microboone_opflash
microboone_opflash_saturation.InputModule: "ophit"

microboone_opflash_saturation_beam: @local::microboone_opflash
microboone_opflash_saturation_beam.InputModule: "ophitBeam"

microboone_opflash_saturation_cosmic: @local::microboone_opflash
microboone_opflash_saturation_cosmic.InputModule: "ophitCosmic"

microboone_opdigiana:        @local::standard_opdigiana
microboone_opflashana:       @local::standard_opflashana

microboone_simphotoncounteralg: @local::standard_simphotoncounteralg
microboone_flashhypothesisanaalg: @local::standard_flashhypothesisanaalg
microboone_flashhypothesisanamodule: @local::standard_flashhypothesisanamodule

END_PROLOG
