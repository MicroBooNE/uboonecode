#include "services_microboone.fcl"
#include "litemaker_mcpart.fcl"
#include "litemaker_simch.fcl"

process_name: MCHeavyLiteMaker

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "ana_hist.root" }
  TimeTracker:  {}
  RandomNumberGenerator: {} #ART native random number generator
  message:      @local::standard_warning
  FileCatalogMetadata:  @local::art_file_catalog_mc
  LLMetaMaker: {Enable: true}
  @table::microboone_simulation_services
}

services.FileCatalogMetadata.applicationVersion: "develop"
services.FileCatalogMetadata.fileType: "mc"
services.FileCatalogMetadata.runType: "physics"
services.FileCatalogMetadataMicroBooNE: {
  FCLName: "run_larlite_maker_mc.fcl"
  FCLVersion: "develop"
  ProjectName: "LiteMC"
  ProjectStage: "LiteMaker"
  ProjectVersion: "develop"
}

services.DetectorPropertiesService.NumberTimeSamples: 6400
services.DetectorPropertiesService.ReadOutWindowSize: 6400
services.DetectorClocksService.InheritClockConfig:       false
services.DetectorClocksService.TriggerOffsetTPC:         -0.400e3

source:
{
  module_type: RootInput
  maxEvents:  -1        # Number of events to create
}

physics:
{

 analyzers:
 {
   mcpart: @local::litemaker_mcpart
   simch:  @local::litemaker_simch
 }

 analyzeIt: [ mcpart,
              simch,
            ]

 end_paths:     [ analyzeIt ]
}

physics.analyzers.mcpart.stream:      "mcpart"
physics.analyzers.simch.stream:       "simch"

physics.analyzers.mcpart.out_filename:      "larlite_mcpart.root"
physics.analyzers.simch.out_filename:       "larlite_simch.root"

