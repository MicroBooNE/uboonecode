#include "services_microboone.fcl"

microboone_reco_mcc7_services:
{
  ExptGeoHelperInterface:     @local::microboone_geometry_helper
  Geometry:                   @local::microboone_geo
  PhotonVisibilityService:    @local::microboone_photonvisibilityservice
  OpDigiProperties:           @local::microboone_opdigiproperties
                              @table::microboone_services_reco

}
microboone_reco_mcc7_services.DetectorPropertiesService.NumberTimeSamples:        6400
microboone_reco_mcc7_services.DetectorPropertiesService.ReadOutWindowSize:        6400
microboone_reco_mcc7_services.DetectorClocksService.InheritClockConfig:           false
microboone_reco_mcc7_services.DetectorClocksService.TriggerOffsetTPC:             -0.400e3

microboone_reco_mcc7_services.SignalShapingServiceMicroBooNE.StretchFullResponse: true
microboone_reco_mcc7_services.SignalShapingServiceMicroBooNE.NConfigs:            2


process_name: ScanUtil

# DataScanner default parameter settings
standard_utilscanner:
{ module_type: "UtilScanner" }

services:
{
    # Load the service that manages root files for histograms.
    TFileService: { fileName: "larutil.root" }
    TimeTracker:  {}
    RandomNumberGenerator: {} #ART native random number generator
    message:      @local::standard_warning
    UBOpReadoutMap: @local::microboone_opreadoutmap
    @table::microboone_reco_mcc7_services
}

source:
{
    module_type: EmptyEvent
    maxEvents:   1        # Number of events to create
    timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{
        
    analyzers:
    {
        scanner: @local::standard_utilscanner
    }
    
    analyzeIt: [ scanner ]
    
    end_paths:     [ analyzeIt ]
}

physics.analyzers.scanner.DetectorPropertiesService: @local::services.DetectorPropertiesService
physics.analyzers.scanner.LArPropertiesService:      @local::services.LArPropertiesService
physics.analyzers.scanner.Geometry:                  @local::services.Geometry
