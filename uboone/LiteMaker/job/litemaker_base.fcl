litemaker_base:
{
  # module name
  module_type:       "LiteScanner"
  # boolean to decide whether or not to store association
  store_association: true
  # pot summary producer labels
  pot_labels: []
  # output file name
  out_filename:      "larlite_empty.root"
  # for SAM metadata
  stream: "empty"
  # boolean to enable "unique" filename ... suffix becomes YYYYMMDD_HHMMSS_MICROSECONDS.root
  unique_filename: true

  # Producer names specified below would be looked up & stored in
  # the output larlite file. The key represents the data product
  # type which is uniquely defined for larlite::data::kDATA_TREE_NAME
  # string array.
  DataLookUpMap: 
  {
    potsummary: []
    gtruth:     []
    mcflux:     []
    mctruth:    []
    mcpart:     []
    simch:      []
    auxsimch:   []
    mcshower:   []
    mctrack:    []
    rawdigit:   []
    wire:       []
    hit:        []
    cluster:    []
    endpoint2d: []
    seed:       []
    sps:        []
    vertex:     []
    track:      []
    shower:     []
    ophit:      []
    opflash:    []
    cosmictag:  []
    calo:       []
    partid:     []
    pfpart:     []
  }

  # Here list data products by type-producer name in the same style as DataLookUpMap.
  # This map is used to search for product arrays that are candidate to look up associations for.
  # If boolean ScanAssByProducers is set to true, associations made by registered product
  # producers (i.e. the case where association and associated products are made by the same module)
  # will be stored as well
  AssociationLookUpMap: {}

  # If set to true, associations created by associated data product producers are stored automatically
  ScanAssByProducers: true

  # Register a list of association producers for which associations among products in AssociationLookUpMap
  # will be stored
  AssociationProducers: []


}
