#!/usr/bin/env python
#endscript to run after swizzling
#- script looks for *.root files in the directory (presumably generated by swizzling job)
#- it extracts run/subrun number using subruns.py from found root file
#- it then uses sam to get the start time and end time of the run/subrun 
#- next, pull data from ifdb using bdaq_get and the timestamps
#- run lar job with BeamData module
#
#Output:
#  PhysicsRun*beamdata.root - lar file with beamdata added in
#  beam_%7r_%5r_%#.root - file with all the beam info

from subprocess import call
from os import listdir
from os.path import isfile, join
import samweb_cli
import time
import sys
import re 
from subprocess import check_output

samweb = samweb_cli.SAMWebClient(experiment='uboone') 

onlyfiles = [ f for f in listdir("./") if isfile(join("./",f)) ]
ubdaq_file=""
(run,subrun)=(0,0)
for fs in onlyfiles:
    if ( '.root' not in fs or 'beamdata' in fs):
        continue
    print "Check %s"%fs
    rootfile=fs
    out=check_output(["subruns.py", rootfile])
    if (len(out.split()) !=2 ):
        continue
    
    (run,subrun)=out.split()
    print "Got run/subrun from %s (%i,%i)"%(rootfile,int(run),int(subrun))

    ubdaq_file=samweb.listFiles("data_tier raw and file_type data and file_format 'binaryraw-uncompressed' and run_number %i.%i"%(int(run),int(subrun)))

    if (len(ubdaq_file)==0):
        sys.exit("Error! Could not find parent ubdaq file. Can't extract metadata. Beam merging failed!")
    elif (len(ubdaq_file)>1):
        sys.exit("Error! Found more than one ubdaq file matching (run, subrun)=(%i, %i). Can't extract metadata. Beam merging failed!"%(int(run),int(subrun)))
        
    meta=samweb.getMetadata(filenameorid=ubdaq_file[0])
    beg_sec=time.mktime(time.strptime(meta["start_time"], "%Y-%m-%dT%H:%M:%S+00:00"))
    beg_usec=int(meta["online.start_time_usec"])

    end_sec=time.mktime(time.strptime(meta["end_time"], "%Y-%m-%dT%H:%M:%S+00:00"))
    end_usec=int(meta["online.end_time_usec"])

#there is an offset between beam timestamp and detector timestamp ~35ms
#subtract/add additional 30ms (between spills) at beginning/end to make
# sure we get events on the edge
    cmd="bdaq_get -i %i %i -e %i %i -r %i -s %i -f beamdaq_config.fcl "%(beg_sec,beg_usec-35000-30000,end_sec,end_usec-35000+30000,int(meta["runs"][0][0]),int(meta["runs"][0][1]))
    return_code = call(cmd, shell=True) 

    info_file="beam_%07i_%05i.info"%(int(meta["runs"][0][0]),int(meta["runs"][0][1]))
    print info_file
    if ( isfile(info_file)):
    #Check for consistency between info file and root file
        print "Got info file, so looks good"
    else:
        sys.exit("Missing bdaq_get info file. Probably did not finish correctly.")

#run lar job
    cmd="lar -c beamdata.fcl %s -o %s_beamdata.root"%(rootfile,rootfile.strip(".root"))
    return_code = call(cmd, shell=True)
    if (return_code!=0):
        sys.exit("Art failed with return code %i"%return_code)
