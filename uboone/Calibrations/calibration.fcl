#include "services_microboone.fcl"
#include "caldata.fcl"

process_name: CalibrationTPC

services:
{
  #Load the service that manages root files for histograms.
  TFileService: { fileName: "Calibrations.root" }
  Timing:       {}
  RandomNumberGenerator: {}                     #ART native random number generator
  user:         @local::microboone_services
  message:      @local::standard_error
}

#source is now a root file
source:
{
  module_type: RootInput
  maxEvents:  -1            # Number of events to create
}

outputs:
{}

physics:
{
 analyzers:{
    CalibrationTPC:
    {
    module_type: "CalibrationTPC"
    RawDigitModuleLabel: "daq"
    NFFTBins: 9600
    NChanMax: 2000
    EmptyRun: 0 #false or true: 0 or 1
    GainRun:  0 #false or true: 0 or 1
    ShortRun: 1 #false or true: 0 or 1
    Nempty:   0
    Gainempty: 1
    prePulseTicks: 30
    Vmin:     [ 0., 0., 0., 0., 0., 0., 0., 0. ]
    Vmax:     [ 0.75, 0.75, 0.75, 0.75, 0.5, 0.5, 0.2, 0.2 ]
    Vstep:    [ 0.075, 0.075, 0.075, 0.075, 0.05, 0.05, 0.02, 0.02 ]
    LinFitVmaxColl:    [ 0.75, 0.75, 0.75, 0.75, 0.50, 0.50, 0.20, 0.20 ] #order: g=0, s=1, g=0, s=3, g=1, s=1, g=1, s=3, ...
    LinFitVmaxInd:     [ 0.75, 0.75, 0.525, 0.45, 0.3, 0.25, 0.16, 0.16 ]
    LinBegin: 2 #subrun (1 being first) where linearity tests start
    SubRunGain:   [ 0, 0, 1, 1, 2, 2, 3, 3 ]
    SubRunShape:  [ 1, 3, 1, 3, 1, 3, 1, 3 ]
    }
    }
 
 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 ana:  [ CalibrationTPC ]
 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [ ana ] 
 #end_paths:     [  ana ] 
}

