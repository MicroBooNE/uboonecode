#include "services_microboone.fcl"
#include "hitfindermodules_microboone.fcl"
#include "cluster_microboone.fcl"
#include "particleid_microboone.fcl"
#include "filters.fcl"
#include "signalservices_microboone.fcl"
#include "caldata_microboone.fcl"
#include "trackfindermodules_microboone.fcl"
#include "calorimetry_microboone.fcl"
#include "showerfindermodules.fcl"
#include "opticaldetectormodules.fcl"
#include "vertexfindermodules.fcl"
#include "pandoramodules.fcl"
#include "triggeralgo_service.fcl"
#include "photpropservices_microboone.fcl"

process_name: anadata

services:
{
  #Load the service that manages root files for histograms.
  TFileService: { fileName: "rawnoise_tree.root" }
  Timing:       {}
  SimpleMemoryCheck:     { ignoreTotal: 1 }     #default is one
  RandomNumberGenerator: {}                     #ART native random number generator
  user:         @local::microboone_services
  message:      @local::standard_info
}

#source is now a root file
source:
{
  module_type: RootInput
  fileNames   : [ "/pnfs/uboone/data/uboone/raw/Swizzler/swizzle/v04_16_00/00/00/02/75/NoiseRun-0000275-00000.root"
		
 ]

  maxEvents: -1          # Number of events to create
}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "datanoise.root"    #default file name, can override from command line with -o or --output
   fastCloning: false
 } 
}

physics:
{
 producers:{}
 filters:  {} 
 analyzers:{
   Anadata:
   {
   module_type: "Anadata"
 }
 }
 
 
 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below

 ana:  [ Anadata ]
 #ana: []
 
 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers


 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 #end_paths:     [ stream1, ana ] 
 end_paths:     [  ana ] 
}

# define the list of LArSoft modules to run through the simulate path

##physics.analyzers.diffusion:  @local::microboone_diffusion

#physics.producers.calo:       @local::microboone_calomc
#physics.producers.trackkalmanhitcalo.TrackModuleLabel:      "trackkalmanhit"
#physics.analyzers.Noise.DigitModuleLabel:        "daq"
#physics.analyzers.Noise.G4minE:   "0.01"
physics.analyzers.Anadata.RawDigitModuleLabel:        "daq"
physics.analyzers.Anadata.RawOpDetWaveModuleLabel:    "pmtreadout"
