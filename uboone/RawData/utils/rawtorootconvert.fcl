#include "geometry_microboone.fcl"
#include "detectorclocks_microboone.fcl"
#include "pmtconfig_microboone.fcl"
#include "databaseutil_microboone.fcl"
process_name: Swizzler
services:
{
  TFileService: { fileName: "daq_hist.root" }
  TimeTracker:       {}
  RandomNumberGenerator: {} 
  ExptGeoHelperInterface: @local::microboone_geometry_helper
  Geometry:               @local::microboone_geo
  UBOpReadoutMap:           @local::microboone_opreadoutmap
  DetectorClocksService:            @local::microboone_detectorclocks
  DatabaseUtil:           @local::microboone_database

  FileCatalogMetadata: { applicationFamily: "art"
                         applicationVersion: "v04_16_00"
                         fileType: "data"
                         group: "uboone"
                         runType: "physics"
                         service_type: "FileCatalogMetadata"
                        }
  FileCatalogMetadataMicroBooNE: { FCLName: "swizzle.fcl"
                                   FCLVersion: "v1.0"
                                   ProjectName: "Swizzler"
                                   ProjectStage: "swizzle"
                                   ProjectVersion: "v04_16_00"
                                   service_type: "FileCatalogMetadataMicroBooNE"
            			 }

}

# Database settings
services.DatabaseUtil.DBHostName:    "fnalpgsdev.fnal.gov"
services.DatabaseUtil.DBName:        "uboonedaq_dev"
services.DatabaseUtil.DBUser:        "uboonedaq_web"
services.DatabaseUtil.Port:          5436
services.DatabaseUtil.PassFileName:  "uboonedb_passwd"  # name of password file. searched for using env var FW_SEARCH_PATH
services.DatabaseUtil.ToughErrorTreatment: true
services.DatabaseUtil.ShouldConnect: true
services.DatabaseUtil.TableName: "main_run"


source:
{
  fileNames:       []
  module_type:	   LArRawInputSourceUBooNE
  maxEvents:       -1
  huffmanDecode:   true
  beam_histograms: [ "E:TOR101, 100, 0, 50",
                     "E:TORTGT, 100, 0, 50",
                     "E:TOR860, 100, 0, 5",
                     "E:TOR875, 100, 0, 5" ]
}	

outputs:
{
 out1:
  {
   module_type: RootOutput
   fileName:    "larsoft.root" 
   compressionLevel: 3
   dataTier: "raw"
  }
}

physics:
{
 stream1:   [ out1 ]
 end_paths: [ stream1 ]
}


