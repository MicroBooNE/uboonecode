#include "geometry_microboone.fcl"
#include "detectorclocks_microboone.fcl"
#include "pmtconfig_microboone.fcl"
#include "databaseutil_microboone.fcl"
#include "sam_microboone.fcl"
#include "opticaldetectormodules_microboone.fcl"
#include "triggerenforcement.fcl"

process_name: Swizzler
services:
{
  TFileService: { fileName: "daq_hist.root" }
  TimeTracker:  {}
  RandomNumberGenerator: {} 
  FileCatalogMetadata:    @local::art_file_catalog_data
  ExptGeoHelperInterface: @local::microboone_geometry_helper
  Geometry:               @local::microboone_geo
  UBOpReadoutMap:           @local::microboone_opreadoutmap
  DetectorClocksService:            @local::microboone_detectorclocks
  DatabaseUtil:           @local::microboone_database
}
services.DetectorClocksService.InheritClockConfig: false

microboone_tfile_metadata:
{
  JSONFileName:          "daq_hist.root.json"
  GenerateTFileMetadata: false
  dataTier:              "root-tuple"
  fileFormat:            "root"
}

# Database settings
services.DatabaseUtil.DBHostName:    "ifdbprod2.fnal.gov"
services.DatabaseUtil.DBName:        "hootgibson_prod"
services.DatabaseUtil.DBUser:        "uboonedaq_web"
services.DatabaseUtil.Port:          5444
services.DatabaseUtil.PassFileName:  "uboonedb_passwd"  # name of password file. searched for using env var FW_SEARCH_PATH
services.DatabaseUtil.ToughErrorTreatment: true
services.DatabaseUtil.ShouldConnect: true
services.DatabaseUtil.TableName: "main_run"

source:
{
  fileNames:       []
  module_type:	   LArRawInputSourceUBooNE
  maxEvents:       -1
  huffmanDecode:   true
  swizzleTPC:      false
  swizzlePMT:      true
  swizzleTrigger:  true

  swizzleTriggerType: ALL ## This is the only option that works currently!
#  swizzleTriggerType: BNB
#  swizzleTriggerType: EXT
#  swizzleTriggerType: NuMI
#  swizzleTriggerType: CALIB
  beam_histograms: [ "E:TOR101, 100, 0, 50",
                     "E:TORTGT, 100, 0, 50",
                     "E:TOR860, 100, 0, 5",
                     "E:TOR875, 100, 0, 5" ]
}

outputs:
{
 out1:
  {
   module_type: RootOutput
   fileName: "%ifb_%tc.root"
   dataTier: "raw"
   compressionLevel: 3
   fileProperties: {
     maxInputFiles: 1
     granularity: "InputFile"
    }
  }
}

physics:
{
  producers: {
  ### flash finders
  ophit            : @local::microboone_ophit_beam_highgain
  #ophitLow         : @local::microboone_ophit_beam_lowgain
  ophitCosmic      : @local::microboone_ophit_cosmic_highgain
  #ophitCosmicLow   : @local::microboone_ophit_cosmic_lowgain
  opflash          : @local::microboone_opflash_beam_highgain
  #opflashLow       : @local::microboone_opflash_beam_lowgain
  opflashCosmic    : @local::microboone_opflash_cosmic_highgain
  #opflashCosmicLow : @local::microboone_opflash_cosmic_lowgain
 }
 filters: {
  triggerEnforcement: @local::trigger_enforcement
 }
 reco: [ triggerEnforcement, ophit, opflash ]
 stream1:   [ out1 ]
 trigger_paths: [ reco ]
 end_paths: [ stream1 ]
}

services.DetectorClocksService.TrigModuleName: "daq"
