#include "geometry_microboone.fcl"
#include "detectorclocks_microboone.fcl"
#include "pmtconfig_microboone.fcl"
#include "databaseutil_microboone.fcl"
#include "sam_microboone.fcl"
#include "opticaldetectormodules_microboone.fcl"
#include "triggerenforcement.fcl"

BEGIN_PROLOG

microboone_rawdigits_writer:
{
  module_type:RawDigitWriter
  WriteTPCdata: false
  WritePMTdata: true
}

END_PROLOG

process_name: Swizzler
services:
{
  scheduler: { fileMode: NOMERGE }
  TFileService: { fileName: "rawdigits.root" }
  Timing:       {}
  RandomNumberGenerator: {} 
  FileCatalogMetadata:    @local::art_file_catalog_data
  user: {
          ExptGeoHelperInterface: @local::microboone_geometry_helper
          Geometry:               @local::microboone_geo
	  UBOpReadoutMap:         @local::microboone_opreadoutmap
          DetectorClocksService:  @local::microboone_detectorclocks
          DatabaseUtil:           @local::microboone_database
          }
}
services.user.DetectorClocksService.InheritClockConfig: false

microboone_tfile_metadata:
{
  JSONFileName:          "daq_hist.root.json"
  GenerateTFileMetadata: false
  dataTier:              "root-tuple"
  fileFormat:            "root"
}

# Database settings
services.user.DatabaseUtil.DBHostName:    "ifdbprod2.fnal.gov"
services.user.DatabaseUtil.DBName:        "hootgibson_prod"
services.user.DatabaseUtil.DBUser:        "uboonedaq_web"
services.user.DatabaseUtil.Port:          5444
services.user.DatabaseUtil.PassFileName:  "uboonedb_passwd"  # name of password file. searched for using env var FW_SEARCH_PATH
services.user.DatabaseUtil.ToughErrorTreatment: true
services.user.DatabaseUtil.ShouldConnect: true
services.user.DatabaseUtil.TableName: "main_run"

source:
{
  fileNames:       []
  module_type:	   LArRawInputSourceUBooNE
  maxEvents:       -1
  huffmanDecode:   true
  swizzleTPC:      false
  swizzlePMT:      true
  swizzleTrigger:  true

  swizzleTriggerType: ALL ## This is the only option that works currently!
#  swizzleTriggerType: BNB
#  swizzleTriggerType: EXT
#  swizzleTriggerType: NuMI
#  swizzleTriggerType: CALIB
  beam_histograms: [ "E:TOR101, 100, 0, 50",
                     "E:TORTGT, 100, 0, 50",
                     "E:TOR860, 100, 0, 5",
                     "E:TOR875, 100, 0, 5" ]
}

outputs:
{
 out1:
  {
   module_type: RootOutput
   fileName: "%ifb_%tc.root"
   dataTier: "raw"
   compressionLevel: 3
  }
}

physics:
{

 analyzers:
 {
   rawdigitwriter: @local::microboone_rawdigits_writer
 }

 simulate: []
 analyzeIt: [ rawdigitwriter ]
 stream1:   []
 end_paths: [ analyzeIt ]
}

services.user.DetectorClocksService.TrigModuleName: "daq"

