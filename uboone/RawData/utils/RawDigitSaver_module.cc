////////////////////////////////////////////////////////////////////////
// Class:       RawDigitSaver
// Module Type: producer
// File:        RawDigitSaver_module.cc
//
// Generated at Wed Oct  7 15:11:35 2015 by Kazuhiro Terao using artmod
// from cetpkgsupport v1_08_06.
////////////////////////////////////////////////////////////////////////

#include "art/Framework/Core/EDProducer.h"
#include "art/Framework/Core/ModuleMacros.h"
#include "art/Framework/Principal/Event.h"
#include "art/Framework/Principal/Handle.h"
#include "art/Framework/Principal/Run.h"
#include "art/Framework/Principal/SubRun.h"
#include "canvas/Utilities/InputTag.h"
#include "fhiclcpp/ParameterSet.h"
#include "lardataobj/RawData/RawDigit.h"
#include "messagefacility/MessageLogger/MessageLogger.h"

#include <memory>
#include <string>
#include <iostream>
#include <exception>
class RawDigitSaver;

class RawDigitSaver : public art::EDProducer {
public:
  explicit RawDigitSaver(fhicl::ParameterSet const & p);
  // The destructor generated by the compiler is fine for classes
  // without bare pointers or other resource use.

  // Plugins should not be copied or assigned.
  RawDigitSaver(RawDigitSaver const &) = delete;
  RawDigitSaver(RawDigitSaver &&) = delete;
  RawDigitSaver & operator = (RawDigitSaver const &) = delete;
  RawDigitSaver & operator = (RawDigitSaver &&) = delete;

  // Required functions.
  void produce(art::Event & e) override;

private:

  // Declare member data here.
  std::string fDAQRawDigitProducer;
};


RawDigitSaver::RawDigitSaver(fhicl::ParameterSet const & p)
// :
// Initialize member data here.
{
  produces< std::vector<raw::RawDigit>   >();
  fDAQRawDigitProducer = p.get<std::string>("DAQRawDigitProducer");
}

void RawDigitSaver::produce(art::Event & e)
{
  std::unique_ptr<std::vector<raw::RawDigit> > rawdigit_ptr(new std::vector<raw::RawDigit> );

  art::Handle<std::vector<raw::RawDigit> > rawdigit_h;
  e.getByLabel(fDAQRawDigitProducer,rawdigit_h);
  if(!rawdigit_h.isValid()) {
    std::cerr<<"\033[93m[ERROR]\033[00m ... could not locate RawDigit from DAQ!"<<std::endl;
    throw std::exception();
  }
  
  for(auto const& rd : *rawdigit_h) {

    std::vector<short> adc_v;

    adc_v.reserve(rd.ADCs().size());

    for(auto const& adc : rd.ADCs()) adc_v.push_back(adc);

    rawdigit_ptr->emplace_back(rd.Channel(), adc_v.size(), std::move(adc_v), rd.Compression());

  }

  e.put(std::move(rawdigit_ptr));

}

DEFINE_ART_MODULE(RawDigitSaver)
