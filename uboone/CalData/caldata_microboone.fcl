#include "caldata.fcl"
#include "roialg.fcl"
#include "database_microboone.fcl"

BEGIN_PROLOG

microboone_calroi:
{
 module_type:        "CalWireROI"
 DigitModuleLabel:   "daq"
 NoiseSource:        3
 NumBinsHalf:        3
 Threshold:          [ 3, 3, 3 ] # abs(threshold) for finding a Region Of Interest
 NumSigma:           [ 4, 4, 6 ]
 uPlaneROIPad: [ 50, 50 ] # number of bins to pad both ends of the ROIs
 vPlaneROIPad: [ 50, 50 ] # number of bins to pad both ends of the ROIs
 zPlaneROIPad: [ 50, 50 ] # number of bins to pad both ends of the ROIs
 DoBaselineSub:   true # subtract baseline after deconvolution?
 uPlaneRamp:       true # Set true if U plane response includes a pre-ROI ramp
 FFTSize:     256      # re-initialize FFT service to this size
 SaveWireWF:  0
 MinAllowedChannelStatus: 3 # All channels greater than or equal to this status level are considered
 DoBaselineSub_WaveformPropertiesAlg:   false # subtract baseline after deconvolution?
 DodQdxCalib:           false  # apply wire-by-wire calibration?
 dQdxCalibFileName:     "dQdxCalibrationPlanev1.txt"
 
 ROIPropertiesAlg:      { ROIAlgParams: @local::roiAlg_DigitAboveBaseline }

 MinROIAverageTickThreshold: -0.5

}

microboone_calwire:
{
 module_type:        "CalWireMicroBooNE"
 DigitModuleLabel:   "daq"
 PostsampleBins:       0
 DoBaselineSub:   true # subtract baseline after deconvolution (using original method)?
                          # modulo the data size (3200 for uB)
 DoSimpleBaselineSub:   false # subtract baseline after deconvolution (using simple method)?
 DoAdaptiveBaselineSub:   false # subtract baseline after deconvolution (using adaptive method)? -- FORCED ON BY DEFAULT FOR DYNAMIC INDUCED CHARGE DECONV CASE
 BaselineWindowSize:  200    # window size for adaptive baseline method
 BaselineMaxSigBinBuffer:  100    # bin buffer between baseline and nearest signal bin for adaptive baseline method
 BaselineSigThreshold:  3.   # signal threshold for adaptive baseline method
 BaseVarCut:         25.  # Variance cut for selecting baseline points
 SaveWireWF:          0

}

microboone_calwirePrespill:  @local::microboone_calwire
microboone_calwirePostspill: @local::microboone_calwire
microboone_calwirePrespill.DigitModuleLabel: "daq:preSpill"
microboone_calwirePostspill.DigitModuleLabel: "daq:postSpill"


microboone_calwireana: @local::standard_calwireana

microboone_showwire:
{
    module_type: "ShowWire"
    CalDataModuleLabel: "caldata"
    DoSinglePulseChecks: true
    PeakFitWindow: 3
    SinglePulseLocation: 5000
    SinglePulseBuffer: 25
    Channel: 7775
    SaveWaveforms: true
    
    DetPedestalRetrievalAlg:  @local::microboone_pedestalretrievalalg
}

microboone_rawdigitandwirecomparisonana:
{
    module_type: "RawDigitAndWireComparison"
    RawDigitModuleLabel: "daq"
    WireModuleLabel:     "caldata"
    RawDigitAndWireComparisonAlg:
    {
        RawDigitPropertiesAlg:
        {
            ROIAlgParams: @local::roiAlg_DigitAboveThresholdParams
        }
        RecoWirePropertiesAlg:
        {
            ROIAlgParams: @local::roiAlg_DigitAboveThresholdParams
        }
    }
}

microboone_calWireInvert:
{
    module_type:             "CalWireInvert"
    DigitModuleLabel:        "daq" #"digitfilter"
    MinRMSNoise:             [1., 1., 1.]
    Threshold:               [ 3, 3, 10 ] # abs(threshold) for finding a Region Of Interest
    uPlaneROIPad:            [ 150, 50 ]  # number of bins to pad both ends of the ROIs
    vPlaneROIPad:            [ 50, 50 ]   # number of bins to pad both ends of the ROIs
    zPlaneROIPad:            [ 50, 50 ]   # number of bins to pad both ends of the ROIs
    SaveWireWF:              0
    MaxAllowedChannelStatus: 4 # All channels up to this status level are considered
}

microboone_rawdigitfilter:
{
    module_type:           "RawDigitFilterUBooNE"
    DigitModuleLabel:      "daq"
    ProcessNoise:          true
    ApplyBinAverage:       true
    ApplyTopHatFilter:     true
    SmoothCorrelatedNoise: true
    NumWiresToGroup:       [48, 48, 96]  # these correspond to observed groupings
    TruncateTicks:         false
    WindowSize:            6400
    NumTicksToDropFront:   2400   # these values will put 70 kV drift time in "middle"
    CharacterizationAlg:
    {
        TruncMeanFraction:     0.15
        RMSRejectionCutHi:     [25., 25., 25.]
        RMSRejectionCutLow:    [0.70, 0.70, 0.70]
        RMSSelectionCut:       [1.40, 1.40, 1.40]
        MinMaxSelectionCut:    [13, 13, 11]
        TheChosenWire:         1200
        MaxPedestalDiff:       10.
        FFTHistsWireGroup:     [1, 33, 34]
        NumWiresToGroup:       [48, 48, 96]
        FillHistograms:        false
    }
    CorrelatedCorrectionAlg:
    {
        TruncMeanFraction:     0.15
        ApplyCorSmoothing:     true
        ApplyFFTCorrection:    true
        FillFFTHistograms:     false
        FFTHistsWireGroup:     [1, 33, 34]
        FFTNumWaveHistograms:  [10,48,48]
        FFTWaveHistsStartTick: [96., 96., 7670.]
        FFTPowerThreshold:     [100., 75., 500.]
        NumWiresToGroup:       [48, 48, 96]
        FillHistograms:        false
        RunFFTCorrectedWires:  false
        NumRmsToSmooth:        [6., 6., 6.]
    }
    FilterAlg:
    {
        TruncMeanFraction:     0.15
        StructuringElement:    30
        FillHistograms:        false
    }
    FFTAlg:
    {
        TransformViewVec:      [true, false, false]
        ZigZagCorrectVec:      [true, true,  false]
        ZigZagCorrectBin:      2800
        FillHistograms:        false
        HistDirName:           "FFTAlg"
    }
}


END_PROLOG
