#include "caldata.fcl"

BEGIN_PROLOG

microboone_calroi:
{
 module_type:        "CalWireROI"
 DigitModuleLabel:   "daq"
 Threshold: [ 3, 3, 3 ] # abs(threshold) for finding a Region Of Interest
 MinWid:              4 # min width (time bins) for a ROI
 MinSep:             50 # min separation (time bins) between ROIs
 uPlaneROIPad: [ 150, 50 ] # number of bins to pad both ends of the ROIs
 vPlaneROIPad: [ 50, 50 ] # number of bins to pad both ends of the ROIs
 zPlaneROIPad: [ 50, 50 ] # number of bins to pad both ends of the ROIs
 DoBaselineSub:   true # subtract baseline after deconvolution?
 uPlaneRamp:       true # Set true if U plane response includes a pre-ROI ramp
 FFTSize:     256      # re-initialize FFT service to this size
 SaveWireWF:  0
}

microboone_calwire:
{
 module_type:        "CalWireMicroBooNE"
 DigitModuleLabel:   "daq"
 PostsampleBins:       0
 DoBaselineSub:   true # subtract baseline after deconvolution?
                          # modulo the data size (3200 for uB)
 BaseVarCut:         25.  # Variance cut for selecting baseline points
 SaveWireWF:          0
}

microboone_calwirePrespill:  @local::microboone_calwire
microboone_calwirePostspill: @local::microboone_calwire
microboone_calwirePrespill.DigitModuleLabel: "daq:preSpill"
microboone_calwirePostspill.DigitModuleLabel: "daq:postSpill"


microboone_calwireana: @local::standard_calwireana

microboone_showwire:
{
    module_type: "ShowWire"
    CalDataModuleLabel: "caldata"
    DoSinglePulseChecks: true
    PeakFitWindow: 3
    SinglePulseLocation: 5000
    SinglePulseBuffer: 25
    Channel: 7775
    SaveWaveforms: true
}

END_PROLOG
