
BEGIN_PROLOG

microboone_optical_4fem_sim:
{
  module_type:               "OpticalFEM"   # The module we're trying to execute.
  BeamGateModule:            ""             # the name of the process used to generate the simulated beam gate
  FakeBeamGateModule:        "optdigitizer" # the name of the process used to generate the FAKE beam gate
  OpticalDigitizationModule: "optdigitizer" # the name of the process used to generate the input ADC counts

  # For all the remaining parameters there are two values:
  # the first is for the low-gain FEMs,
  # the second for the high-gain FEMs.

  # As of Aug 2013, the high-gain values are guesses and
  # approximations. The low-gain values are simply copies of the
  # high-gain values, with a 10x adjustment for any thresholds. An FEM
  # expert needs to go through these numbers and adjust them.
  
  DiscriminatorThreshold0:[2000, 2000,   5,   5] # Lower limit of discriminator 0, units=ADC counts 
  DiscriminatorThreshold1:[4000, 4000, 140,  90] # Lower limit of discriminator 1, units=ADC counts 
  DiscriminatorThreshold3:[4000, 4000,4000,4000] # Lower limit of discriminator 3, units=ADC counts
  Discriminator0Window:   [   6,    6,   6,   6] # Disc 0 must have fired within this many time slices for disc1 to fire.
  PMTDelay0:              [   4,    4,   4,   4] # Delay used to subtract the signal from itself, units=time slices
  PMTDelay1:              [  -3,   -3,  -3,  -3] # Number of time slices before (if negative) or after (if positive)
                                                 # the disc 0 fire if we're saving time slices due to disc 1 firing.
  BeamWordsBNB:           [1500,1500,    0,   0] # Number of time slices to write for each BNB beam gate
  BeamWordsNuMI:          [1500,1500,    0,   0] # Number of time slices to write for each NuMI beam gate
  BeamDelayBNB:           [   0,   0,    0,   0] # Number of time slices to include before start of BNB beam gate
  BeamDelayNuMI:          [   0,   0,    0,   0] # Number of time slices to include before start of NuMI beam gate
  PMTWords:               [   0,   0,   40,  40] # Number of time slices to write when disc 1 fires.
  BeamThreshold:          [4000,4000, 4000,4000] # Total number of ADC counts among all selected channels for PMT beam trigger
  CosmicThreshold:        [4000,4000, 4000,4000] # Total number of ADC counts among all selected channels for PMT cosmic trigger
  BeamMultiplicity:       [  40,  40,   40,  40] # Number of channels whose sum must be over threshold for a PMT beam trigger
  CosmicMultiplicity:     [  40,  40,   40,  40] # Number of channels whose sum must be over threshold for a PMT cosmic trigger
  PMTPrecount:            [   3,   3,    3,   3] # Number of inactive time slices between successive discriminator 0 firings.
  Discriminator1DeadTime: [  45,  45,   45,  45] # Dead time for discriminator 1, units=time slices
  Discriminator3DeadTime: [  24,  24,   24,  24] # Dead time for discriminator 3, units=time slices
  Discriminator1Width:    [   0,   0,    7,   7] # Pulse width for discriminator 1, units=time slices
  Discriminator3Width:    [   0,   0,    7,   7] # Pulse width for discriminator 3, units=time slices
  PMTTriggerDeadtime:     [   0,   0,    8,   8] # Minimum number of time slices between successive triggers from FEM.
                                                 # This an FEM hardware parameter. It is NOT the dead time between
                                                 # successive triggers that must be implemented by the Trigger Module.
  FEMSlot:                [4,5,6,7]
  TriggerFEMSlot:         [4] # Slot address of PMT FEM used for PMT FEM trigger generation 
  # This parameter generates a large number of histograms for every event.
  # For diagnostic purposes only. Do not turn this parameter on unless you
  # really, REALLY mean it!
  VerboseHistograms:      false
  DebugMode: false
}

microboone_optical_3fem_sim:
{
  module_type:               "OpticalFEM"   # The module we're trying to execute.
  BeamGateModule:            ""             # the name of the process used to generate the simulated beam gate (if necessary)
  FakeBeamGateModule:        "optdigitizer" # the name of the process used to generate the FAKE beam gate (if necessary)
  OpticalDigitizationModule: "optdigitizer" # the name of the process used to generate the input ADC counts

  # For all the remaining parameters there are two values:
  # the first is for the low-gain FEMs,
  # the second for the high-gain FEMs.

  # As of Aug 2013, the high-gain values are guesses and
  # approximations. The low-gain values are simply copies of the
  # high-gain values, with a 10x adjustment for any thresholds. An FEM
  # expert needs to go through these numbers and adjust them.

  DiscriminatorThreshold0:[2000,    5,   5] # Lower limit of discriminator 0, units=ADC counts 
  DiscriminatorThreshold1:[4000,   90, 140] # Lower limit of discriminator 1, units=ADC counts 
  DiscriminatorThreshold3:[4000, 4000,4000] # Lower limit of discriminator 3, units=ADC counts
  Discriminator0Window:   [   6,    6,   6] # Disc 0 must have fired within this many time slices for disc1 to fire.
  PMTDelay0:              [   4,    4,   4] # Delay used to subtract the signal from itself, units=time slices
  PMTDelay1:              [  -3,   -3,  -3] # Number of time slices before (if negative) or after (if positive)
                                            # the disc 0 fire if we're saving time slices due to disc 1 firing.
  BeamWordsBNB:           [1500,1500,    0] # Number of time slices to write for each BNB beam gate
  BeamWordsNuMI:          [1500,1500,    0] # Number of time slices to write for each NuMI beam gate
  BeamDelayBNB:           [   0,   0,    0] # Number of time slices to include before start of BNB beam gate
  BeamDelayNuMI:          [   0,   0,    0] # Number of time slices to include before start of NuMI beam gate
  PMTWords:               [   0,  40,   40] # Number of time slices to write when disc 1 fires.
  BeamThreshold:          [4000,4000, 4000] # Total number of ADC counts among all selected channels for PMT beam trigger
  CosmicThreshold:        [4000,4000, 4000] # Total number of ADC counts among all selected channels for PMT cosmic trigger
  BeamMultiplicity:       [  40,  40,   40] # Number of channels whose sum must be over threshold for a PMT beam trigger
  CosmicMultiplicity:     [  40,  40,   40] # Number of channels whose sum must be over threshold for a PMT cosmic trigger
  PMTPrecount:            [   3,   3,    3] # Number of inactive time slices between successive discriminator 0 firings.
  Discriminator1DeadTime: [  45,  45,   45] # Dead time for discriminator 1, units=time slices
  Discriminator3DeadTime: [  24,  24,   24] # Dead time for discriminator 3, units=time slices
  Discriminator1Width:    [   0,   7,    7] # Pulse width for discriminator 1, units=time slices
  Discriminator3Width:    [   0,   7,    7] # Pulse width for discriminator 3, units=time slices
  PMTTriggerDeadtime:     [   0,   8,    8] # Minimum number of time slices between successive triggers from FEM.
                                            # This an FEM hardware parameter. It is NOT the dead time between
                                            # successive triggers that must be implemented by the Trigger Module.
  FEMSlot:                [4,5,6]
  TriggerFEMSlot:         [4] # Slot address of PMT FEM used for PMT FEM trigger generation 
  # This parameter generates a large number of histograms for every event.
  # For diagnostic purposes only. Do not turn this parameter on unless you
  # really, REALLY mean it!
  VerboseHistograms:      false
  DebugMode: false
}

microboone_optical_dram_readout_sim:
{
  module_type: "OpticalDRAMReadout"

  FIFOModuleName: "optfem"

  TrigModuleName: "triggersim"

  ReadoutFrameOffset: [1,2]
}

microboone_optical_adc_sim:
{

  module_type:  "UBOpticalADCSim"

  G4ModName:    "largeant"

  BeamModName:  ["generator"]

  EnableSpread: true

  Duration:     7.25e3

  G4StartTime:  -4.05e6

  LogicPulseAmplitude: 3000

  UserBNBTime:  [0] # G4 Time [ns] to force opening BNB beamgate for the case there is no BeamGateInfo created by GENIE

  UserNuMITime: []  # G4 Time [ns] to force opening NuMI beamgate for the case there is no BeamGateInfo created by GENIE

}

microboone_optical_fem_sim: @local::microboone_optical_3fem_sim

END_PROLOG
