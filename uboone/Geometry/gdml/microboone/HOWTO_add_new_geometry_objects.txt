This file describes how I edited the generate_gdml.pl script to include 
new geometry of a veto wall.


Brand new to gdml? How the geometry works:

The modeling of particle interactions with matter and the detector is done 
using GEANT 4 (G4). We have to tell G4 where the detector is, and what it 
is made of. This is done in a *.gdml file. The general layout of a gdml 
file can be found on Google. This HOWTO won't go into those details.

How to include your geometry:
The bash script, GenerateMicroBooNEGDML.sh has two steps inside. First is a 
perl (*.pl) script which generates all of the *.gdml files. A script is 
used because many of the geometrical objects are repeated thousands of 
times at varying locations (for example, a wire). The file generate_gdml.pl 
holds all of the production software to make the *.gdml geometry files. 
After this, the second step called is make_gdml.pl, which stitches togther 
all of the *.gdml files into one.

You need to edit generate_gdml.pl: I will show an example of how I inserted 
a proposed veto wall geometry.

1. Search for the variable '$vetoWall_switch' ~ line 90. This is default 
turned off since this wall has not been built yet, and is only under study 
by a few people. This will control the code flow to make/not make the veto 
wall in the gdml.

2. Search for the next instance of '$vetoWall_switch' ~ line 112. If the 
switch is on, gen_vetoWall() will be called. This is placed before 
gen_enclosure because it lives within it, but placed after gen_cryostat() 
because it lives outside of it.

3. Next, gen_vetoWall() is defined ~ line 1406. The first few lines handle 
file i/o for producing the gdml file micro-vetoWall.gdml. Pick a new 
variable for the file handle, I used $VW.

  # Set up the output file.
  $VW = "micro-vetoWall" . $suffix . ".gdml";
  push (@gdmlFiles, $VW); # Add file to list of GDML fragments
  $VW = ">" . $VW; 
  open(VW) or die("Could not open file $VW for writing");
  
  print VW <<EOF;

Within this part of the code, I write the <solids> info and the <structure> 
info for my new detector.

4. Within gen_enclosure definition, I added an if statement for 
$vetoWall_switch is on. Within this, I put the <physvol> info for each 
object I want within the enclosure which references the <structure> pieces 
in 3.

Finally, you can turn the switch on temporarily, and test to make sure your 
code produces the *.gdml file with GenerateMicroBooNEGDML.sh and behaves as 
expected.

