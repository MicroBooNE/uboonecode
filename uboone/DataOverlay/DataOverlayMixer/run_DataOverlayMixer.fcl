#include "services_microboone.fcl"

process_name : RawDigitMixer      #The process name must NOT contain any underscores

source : {
  module_type : RootInput
  maxEvents   : -1
}

services : {

  TFileService: { fileName: "DataOverlayMixer_hist.root" }
  Timing:       {}
  SimpleMemoryCheck:     { ignoreTotal: 1 }     #default is one
  RandomNumberGenerator: {}                     #ART native random number generator
  user:
  {
	IChannelStatusService:           @local::microboone_channelstatus_service
  	Geometry:                       @local::microboone_geo
  	ExptGeoHelperInterface:         @local::microboone_geometry_helper

	#BELOW you see a list of the common services! Uncomment the ones you need.
  	#ExptGeoHelperInterface:         @local::microboone_geometry_helper
  	#Geometry:                       @local::microboone_geo
 	#DetectorProperties:             @local::microboone_detproperties
 	#LArProperties:                  @local::microboone_properties
 	#DatabaseUtil:                   @local::microboone_database
 	#TimeService:                    @local::microboone_timeservice
 	#SpaceCharge:                    @local::microboone_spacecharge
 	#SeedService:                    @local::microboone_seedservice
	#LArFFT:                         @local::microboone_larfft
	#SignalShapingServiceMicroBooNE: @local::microboone_signalshapingservice
	#BackTracker:                    @local::microboone_backtracker  
	#MemoryPeakReporter: {}
	#OpDigiProperties:               @local::microboone_opdigiproperties
  }

  message:      @local::standard_info

}

outputs: {
  out: { module_type: RootOutput
  	         fileName: "DataOverlayMixer.root"
		 fastCloning: false
		 compressionLevel: 1 }
}

physics: {

  producers : {
  }
  analyzers: {
     # ParameterSets for zero or more analyzer modules
  }

  filters : {
  	    daq: { module_type : OverlayRawDataMicroBooNE
	    	     fileNames : [ " prod_muons_detsim_nonoise.root" ]
		     readMode : sequential
		     wrapFiles : true
		     coverageFraction : 1
		     detail : {
		       RawDigitDataModuleLabel : daq
		       OpDetDataModuleLabel : pmtreadout
		       RawDigitMCModuleLabel : daq
		       OpDetMCModuleLabel : pmtreadout
		       InputFileIsData : false
		       G4InputModuleLabel : largeant
		       GeneratorInputModuleLabel : generator
		       #MCRecoInputModuleLabel : mcreco
		       EventsToMix: 1
		       DefaultMCRawDigitScale: 1.0
		       DefaultMCOpDetScale:    1.0
		     }
		}
  }

  # trigger_paths: [ path0, path1 ]
  # end_paths:     [ path2, path3 ]


  mixer_path : [ mixer ]
  trigger_paths : [ mixer_path ]

  # ana1: [userana]
  output : [ out ]
  end_paths: [ output ]

}