#include "services_microboone.fcl"
#include "largeantmodules_microboone.fcl"
#include "mcreco.fcl"
#include "corsika_microboone.fcl"
#include "time_memory_tracker_microboone.fcl"
process_name: G4

services:
{
  scheduler:    { defaultExceptions: false }    # Make all uncaught exceptions fatal.
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "g4_hist.root" }
  TimeTracker:             @local::microboone_time_tracker
  MemoryTracker:           @local::microboone_memory_tracker
  RandomNumberGenerator: {} #ART native random number generator
  FileCatalogMetadata:  @local::art_file_catalog_mc
  @table::microboone_g4_services
}

#source is now a root file
source:
{
  module_type: RootInput
  maxEvents:  10        # Number of events to create
  saveMemoryObjectThreshold: 0
}

largeant: { 
   	 module_type: MergeSimSources
		 InputSourcesLabels: ["largeanta","largeantb","largeantc","largeantd","largeante"]
		 TrackIDOffsets: [1e7, 2e7, 3e7, 4e7, 5e7]
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
   largeant: @local::largeant
   mcreco:   @local::standard_mcreco
   #rns:      { module_type: "RandomNumberSaver" }
 }

 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 merge: [ largeant, mcreco ]
 
 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [ merge] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [stream1]  
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "%ifb_%tc_g4.root"
   dataTier:    "simulated"
   compressionLevel: 1
   outputCommands: ["keep *_*_*_*",
                    "drop *_largeanta_*_G4a",
		    "drop *_largeantb_*_G4b",
		    "drop *_largeantc_*_G4c",
		    "drop *_largeantd_*_G4d",
		    "drop *_largeante_*_G4e"]
   dropMetaDataForDroppedData: true
   saveMemoryObjectThreshold: 0
 }
}

