#include "services_microboone.fcl"

process_name: Copy

services:
{
  message:      @local::standard_warning
  FileCatalogMetadata:  @local::art_file_catalog_mc
}
services.FileCatalogMetadata.applicationVersion:  "S2013.06.25"

services.user.FileCatalogMetadataExtras:  @local::microboone_file_catalog
services.user.FileCatalogMetadataExtras.Metadata: [ "group",      "uboone",
                                                    "fileFormat", "root",
                                                    "fclName",    "copy.fcl",
                                                    "fclVersion", "v1_5",
                                                    "ubProjectStage",   "merge",
                                                    "ubProjectVersion", "v1_3" ]
services.user.FileCatalogMetadataExtras.RenameTemplate: "${base .root}_merged.root"


source:
{
  module_type: RootInput
  maxEvents:  10        # Number of events to create
}

physics:
{

 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [ stream1 ]  
}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "copy.root" #default file name, can override from command line with -o or --output
   dataTier:    "reconstructed"
 }
}
