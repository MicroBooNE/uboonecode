## 
##  Stage 2 Reconstruction
##
#include "services_microboone.fcl"
#include "hitfindermodules_microboone.fcl"
#include "cluster_microboone.fcl"
#include "trackfindermodules_microboone.fcl"
#include "calorimetry_microboone.fcl"
#include "particleid_microboone.fcl"
#include "showerreco3d_microboone.fcl"
#include "showerquality_microboone.fcl"
#include "pandoramodules_microboone.fcl"
#include "cosmicremovalmodules.fcl"
#include "triggeralgo_service.fcl"
#include "opticaldetectormodules.fcl"
#include "photpropservices_microboone.fcl"

process_name: RecoStage2

services:
{
  scheduler:                  { defaultExceptions: false }    # Make all uncaught exceptions fatal.
  # Load the service that manages root files for histograms.
  TFileService:               { fileName: "reco_stage_2_hist.root" }
  TimeTracker:                {}
  MemoryTracker:              { ignoreTotal: 1 } # default is one
  RandomNumberGenerator:      {} #ART native random number generator
  message:                    @local::microboone_message_services_prod_debug
  FileCatalogMetadata:        @local::art_file_catalog_mc
  PhotonVisibilityService:    @local::microboone_photonvisibilityservice
  OpDigiProperties:           @local::microboone_opdigiproperties
                              @table::microboone_services_reco
}

services.DatabaseUtil.ShouldConnect: false


#source is now a root file
source:
{
  module_type: RootInput
  maxEvents:  10        # Number of events to create
  saveMemoryObjectThreshold: 0
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {

  ### random number saver
  rns:                         { module_type: RandomNumberSaver }

  ### pandora core modules
  pandoraNu:                   @local::microboone_pandora

  ### pandora cosmic kalmanhit
  pandoraCosmicKHit:           @local::microboone_track3Dkalmanhit
  pandoraNuKHit:               @local::microboone_track3Dkalmanhit

  ### pandora cosmic pfparticle
  pandoraCosmicKHitPFPart:     @local::microboone_cosmicpfparticletagger

  ### pandora analysis
  pandoraCosmicKHittag:        @local::microboone_cosmictracktagger
  pandoraCosmicKHitcalo:       @local::microboone_calomc
  pandoraCosmicKHitpid:        @local::microboone_chi2pid
  pandoraCosmicKHitFlashMatch: @local::microboone_beamflashtrackmatchtagger
  pandoraCosmicKHitRemoval:    @local::microboone_crhitremoval
  pandoraNuKHittag:            @local::microboone_cosmictracktagger
  pandoraNuKHitcalo:           @local::microboone_calomc
  pandoraNuKHitpid:            @local::microboone_chi2pid
  pandoraNuKHitFlashMatch:     @local::microboone_beamflashtrackmatchtagger
  
  ### track fit producers
  trackkalmanhit:              @local::microboone_track3Dkalmanhit        # Track fit for fuzzy cluster
  trackkalmanhitcc:            @local::microboone_track3Dkalmanhit        # Track fit for Cluster Crawler (Track Maker)
  
  ### track stitching
  stitchkalmanhit:             @local::microboone_trackstitcher
  stitchkalmanhitcc:           @local::microboone_trackstitcher

  ### shower reco producers
  showerrecofuzzy:             @local::showerreco3d_uboone
  showerrecopandora:           @local::showerreco3d_uboone_pandora

  ### calorimetry producers
  trackkalmanhitcalo:          @local::microboone_calomc                  # Calorimetry for fuzzy cluster
  stitchkalmanhitcalo:         @local::microboone_calomc
  trackkalmanhitcalocc:        @local::microboone_calomc                  # Calorimeter for Cluster Crawler
  stitchkalmanhitcalocc:       @local::microboone_calomc

  ### PID producers
  trackkalmanhitpid:           @local::microboone_chi2pid
  stitchkalmanhitpid:          @local::microboone_chi2pid
  trackkalmanhitpidcc:         @local::microboone_chi2pid
  stitchkalmanhitpidcc:        @local::microboone_chi2pid

  ### track-tagging producers
  trackkalmanhittag:           @local::microboone_cosmictracktagger
  stitchkalmanhittag:          @local::microboone_cosmictracktagger
  trackkalmanhittagcc:         @local::microboone_cosmictracktagger
  stitchkalmanhittagcc:        @local::microboone_cosmictracktagger

 }

 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 reco: [ rns,
         ###>> fuzzy cluster up to bat first
         trackkalmanhit,   
         stitchkalmanhit,   
         trackkalmanhitcalo,   
         stitchkalmanhitcalo,   
         trackkalmanhitpid,   
         stitchkalmanhitpid,
         trackkalmanhittag,
         stitchkalmanhittag,
         ###>> Cluster Crawler / Track Maker bats second
         trackkalmanhitcc, 
         stitchkalmanhitcc, 
         trackkalmanhitcalocc, 
         stitchkalmanhitcalocc, 
         trackkalmanhitpidcc, 
         stitchkalmanhitpidcc,
         trackkalmanhittagcc,
         stitchkalmanhittagcc,
         ###>> Pandora up third
         pandoraCosmicKHit,
         pandoraCosmicKHittag,
         pandoraCosmicKHitcalo,
         pandoraCosmicKHitpid,
         pandoraCosmicKHitPFPart,
         pandoraCosmicKHitFlashMatch,
         pandoraCosmicKHitRemoval,
         pandoraNu,
         pandoraNuKHit,
         pandoraNuKHittag,
         pandoraNuKHitcalo,
         pandoraNuKHitpid,
         pandoraNuKHitFlashMatch,
         ###>> Shower reconstruction bats cleanup
         showerrecofuzzy, 
         showerrecopandora
         ]
 
 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [reco] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [stream1]  
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "%ifb_%tc_reco2.root"
   dataTier:    "reconstructed-3d"
   compressionLevel: 1
   saveMemoryObjectThreshold: 0
   fastCloning: false
 }
}

### Here, we overwrite ALL module labels with the ones defined above.

# Fuzzy Cluster related
physics.producers.trackkalmanhit.HitModuleLabel:                    "gaushit"
physics.producers.trackkalmanhit.ClusterModuleLabel:                "fuzzycluster"

physics.producers.stitchkalmanhit.TrackModuleLabel:                 "trackkalmanhit"
physics.producers.stitchkalmanhit.SpptModuleLabel:                  "trackkalmanhit"

physics.producers.trackkalmanhitcalo.TrackModuleLabel:              "trackkalmanhit"
physics.producers.trackkalmanhitcalo.SpacePointModuleLabel:         "trackkalmanhit"

physics.producers.stitchkalmanhitcalo.TrackModuleLabel:             "stitchkalmanhit"
physics.producers.stitchkalmanhitcalo.SpacePointModuleLabel:        "trackkalmanhit"

physics.producers.trackkalmanhitpid.CalorimetryModuleLabel:         "trackkalmanhitcalo"
physics.producers.trackkalmanhitpid.TrackModuleLabel:               "trackkalmanhit"

physics.producers.stitchkalmanhitpid.CalorimetryModuleLabel:        "stitchkalmanhitcalo"
physics.producers.stitchkalmanhitpid.TrackModuleLabel:              "stitchkalmanhit"

physics.producers.trackkalmanhittag.ClusterModuleLabel:             "fuzzycluster"
physics.producers.trackkalmanhittag.TrackModuleLabel:               "trackkalmanhit"

physics.producers.stitchkalmanhittag.ClusterModuleLabel:            "fuzzycluster"
physics.producers.stitchkalmanhittag.TrackModuleLabel:              "stitchkalmanhit"

# ClusterCrawler / Track Maker related
physics.producers.trackkalmanhitcc.HitModuleLabel:                  "cccluster"
physics.producers.trackkalmanhitcc.ClusterModuleLabel:              "cccluster"
physics.producers.trackkalmanhitcc.PFParticleModuleLabel:           "cctrack"
physics.producers.trackkalmanhitcc.UseClusterHits:                  false
physics.producers.trackkalmanhitcc.UsePFParticleHits:               true
physics.producers.trackkalmanhitcc.Track3DKalmanHitAlg.SelfSeed:    true

physics.producers.stitchkalmanhitcc.TrackModuleLabel:               "trackkalmanhitcc"
physics.producers.stitchkalmanhitcc.SpptModuleLabel:                "trackkalmanhitcc"

physics.producers.trackkalmanhitcalocc.TrackModuleLabel:            "trackkalmanhitcc"
physics.producers.trackkalmanhitcalocc.SpacePointModuleLabel:       "trackkalmanhitcc"

physics.producers.stitchkalmanhitcalocc.TrackModuleLabel:           "stitchkalmanhitcc"
physics.producers.stitchkalmanhitcalocc.SpacePointModuleLabel:      "trackkalmanhitcc"

physics.producers.trackkalmanhitpidcc.CalorimetryModuleLabel:       "trackkalmanhitcalocc"
physics.producers.trackkalmanhitpidcc.TrackModuleLabel:             "trackkalmanhitcc"

physics.producers.stitchkalmanhitpidcc.CalorimetryModuleLabel:      "stitchkalmanhitcccalo"
physics.producers.stitchkalmanhitpidcc.TrackModuleLabel:            "stitchkalmanhitcc"

physics.producers.trackkalmanhittagcc.ClusterModuleLabel:           "cccluster"
physics.producers.trackkalmanhittagcc.TrackModuleLabel:             "trackkalmanhitcc"

physics.producers.stitchkalmanhittagcc.ClusterModuleLabel:          "cccluster"
physics.producers.stitchkalmanhittagcc.TrackModuleLabel:            "stitchkalmanhitcc"

# Pandora related
physics.producers.pandoraCosmicKHit.UseClusterHits:                 false
physics.producers.pandoraCosmicKHit.UsePFParticleHits:              true
physics.producers.pandoraCosmicKHit.Track3DKalmanHitAlg.SelfSeed:   true
physics.producers.pandoraCosmicKHit.ClusterModuleLabel:             "pandoraCosmic"
physics.producers.pandoraCosmicKHit.PFParticleModuleLabel:          "pandoraCosmic"

physics.producers.pandoraCosmicKHittag.TrackModuleLabel:            "pandoraCosmicKHit"

physics.producers.pandoraCosmicKHitcalo.TrackModuleLabel:           "pandoraCosmicKHit"
physics.producers.pandoraCosmicKHitcalo.SpacePointModuleLabel:      "pandoraCosmicKHit"

physics.producers.pandoraCosmicKHitpid.CalorimetryModuleLabel:      "pandoraCosmicKHitcalo"
physics.producers.pandoraCosmicKHitpid.TrackModuleLabel:            "pandoraCosmicKHit"

physics.producers.pandoraCosmicKHitPFPart.PFParticleModuleLabel:    "pandoraCosmic"
physics.producers.pandoraCosmicKHitPFPart.TrackModuleLabel:         "pandoraCosmicKHit"

physics.producers.pandoraCosmicKHitFlashMatch.TrackModuleLabel:     "pandoraCosmicKHit"
physics.producers.pandoraCosmicKHitFlashMatch.FlashModuleLabel:     "opflash"
physics.producers.pandoraCosmicKHitFlashMatch.BeamFlashTrackMatchAlgParams.MakeOutsideDriftTags: "true"

physics.producers.pandoraCosmicKHitRemoval.CosmicProducerLabels:    ["pandoraCosmicKHitPFPart"]
physics.producers.pandoraCosmicKHitRemoval.FlashProducerLabel:      "pandoraCosmicKHitFlashMatch"
physics.producers.pandoraCosmicKHitRemoval.PFParticleProducerLabel: "pandoraCosmic"
physics.producers.pandoraCosmicKHitRemoval.TrackProducerLabel:      "pandoraCosmicKHit"

physics.producers.pandoraNu.GeantModuleLabel:                       "largeant"
physics.producers.pandoraNu.HitFinderModuleLabel:                   "pandoraCosmicKHitRemoval"
physics.producers.pandoraNu.ConfigFile:                             "PandoraSettings_MicroBooNE_Neutrino.xml"

physics.producers.pandoraNuKHit.UseClusterHits:                     false
physics.producers.pandoraNuKHit.UsePFParticleHits:                  true
physics.producers.pandoraNuKHit.Track3DKalmanHitAlg.SelfSeed:       true
physics.producers.pandoraNuKHit.PFParticleModuleLabel:              "pandoraNu"
physics.producers.pandoraNuKHit.ClusterModuleLabel:                 "pandoraNu"
physics.producers.pandoraNuKHit.HitFinderModuleLabel:               "pandoraCosmicKHitRemoval"

physics.producers.pandoraNuKHittag.TrackModuleLabel:                "pandoraNuKHit"

physics.producers.pandoraNuKHitcalo.TrackModuleLabel:               "pandoraNuKHit"
physics.producers.pandoraNuKHitcalo.SpacePointModuleLabel:          "pandoraNuKHit"

physics.producers.pandoraNuKHitpid.CalorimetryModuleLabel:          "pandoraNuKHitcalo"
physics.producers.pandoraNuKHitpid.TrackModuleLabel:                "pandoraNuKHit"

physics.producers.pandoraNuKHitFlashMatch.TrackModuleLabel:         "pandoraNuKHit"
physics.producers.pandoraNuKHitFlashMatch.FlashModuleLabel:         "opflash"
physics.producers.pandoraNuKHitFlashMatch.BeamFlashTrackMatchAlgParams.MakeOutsideDriftTags: "true"

physics.producers.showerrecofuzzy.InputProducer:                    "fuzzyclustermerger"
physics.producers.showerrecopandora.InputProducer:                  "pandoraNu"

### Here we try to suppress known and pointless messages
services.message.destinations :
{
  STDCOUT: 
  {
     type:      "cout"      #tells the message service to output this destination to cout
     threshold: "WARNING"   #tells the message service that this destination applies to WARNING and higher level messages
     append:     true       #says to append all messages to the output
     categories:
     {
       ChannelFilter:
       {
         limit: 0
         reportEvery: 0
       }
       TrackStitcher:
       {
         limit: 0
         reportEvery: 0
       }
       CRHitRemoval:
       {
         limit: 0
         reportEvery: 0
       }
       default:
       {
         limit: -1  #don't print anything at the infomsg level except the explicitly named categories
         reportEvery: 1
       }
     }
  }
}

