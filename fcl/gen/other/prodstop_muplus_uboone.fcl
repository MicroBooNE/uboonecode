#include "services_microboone.fcl"
#include "singles_microboone.fcl"
#include "largeantmodules_microboone.fcl"
#include "detsimmodules_microboone.fcl"
#include "triggersim_microboone.fcl"
#include "opticaldetectorsim_microboone.fcl"
#include "mccheatermodules.fcl"
#include "mcreco.fcl"

process_name: SinglesGen

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "single_hist_uboone.root" }
  TimeTracker:  {}
  RandomNumberGenerator: {} #ART native random number generator
  @table::microboone_full_services
}
services.BackTracker: @local::microboone_backtracker
#services.PhotonVisibilityService: @local::standard_photonvisibilityservice

#Start each new event with an empty event.
source:
{
  module_type: EmptyEvent
  timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
  maxEvents:   10          # Number of events to create
  firstRun:    1           # Run number to use for this file
  firstEvent:  1           # number of first event in the file
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
   generator:    @local::microboone_singlep
   largeant:     @local::microboone_largeant
   mcreco:       @local::standard_mcreco
   backtrack:    @local::standard_backtrackerloader
   optdigitizer: @local::microboone_optical_adc_sim
   optfem:       @local::microboone_optical_fem_sim
   triggersim:   @local::ubtrigger_dark_bnb
   optreadout:   @local::microboone_optical_dram_readout_sim
   daq:          @local::microboone_simwire
 }

 analyzers:
 {
   largana:   @local::microboone_largeantana
 }

 filters:
 {
 stoppingmu: {
   module_type: "FilterStoppingMuon"
  LArG4ModuleLabel: "largeant"
  }
 }

 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 simulate: [ generator, largeant,  mcreco, stoppingmu , backtrack, optdigitizer, optfem, triggersim, optreadout, daq ]
 #filter1: [ stoppingmu ]
 analyzeIt:  [ largana ]
 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [ simulate ] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [analyzeIt, stream1]  
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   dataTier:    "generated"
   fileName:    "single_gen_uboone.root" #default file name, can override from command line with -o or --output
   compressionLevel: 1
  SelectEvents: ["simulate"]
 }

}


#process_name: GenieGen

# set quantum efficiency supressed scint yield to 0.03 * 24000
services.LArPropertiesService.ScintYield: 29000

# enable optical physics in LArG4
services.LArG4Parameters.EnabledPhysics: [ "Em",
                                                "FastOptical",
                                                "SynchrotronAndGN",
                                                "Ion",
                                                "Hadron",
                                                "Decay",
                                                "HadronElastic",
                                                "Stopping",
                                                "NeutronTrackingCut" ]

# enable this custom physics list
services.LArG4Parameters.UseCustomPhysics: true

# disable cerenkov light
services.LArPropertiesService.EnableCerenkovLight: false

outputs.out1.fileName: "prodstopmu_uboone_%tc_gen.root"

physics.producers.generator: @local::microboone_singlep
physics.producers.generator.TopVolume: "volTPCActive"
physics.producers.generator.GlobalTimeOffset: 0.
physics.producers.generator.RandomTimeOffset: 1600.

#physics.producers.generator.fseed: [ 314159 ]
physics.producers.generator.PDG: [ -13 ]
physics.producers.generator.P0: [ 1.5 ]
physics.producers.generator.SigmaP: [ 1.5 ]
physics.producers.generator.PosDist: 0
physics.producers.generator.PDist: 0
physics.producers.generator.X0: [ 125. ]
physics.producers.generator.SigmaX0: [ 160. ]
physics.producers.generator.Y0: [ 220. ]
physics.producers.generator.SigmaY0: [ 10. ]
physics.producers.generator.Z0: [ 500. ]
physics.producers.generator.SigmaZ0: [ 700. ]

physics.producers.generator.Theta0XZ: [ 0. ]
physics.producers.generator.Theta0YZ: [ -90. ]
physics.producers.generator.SigmaThetaXZ: [ 30. ]
physics.producers.generator.SigmaThetaYZ: [ 30. ]
