#include "services_microboone.fcl"
#include "correct_saturation_afterRun3701.fcl"
#include "opticaldetectormodules_microboone.fcl"
#include "photpropservices_microboone.fcl"
#include "correct_saturation.fcl"
#include "caldata_microboone.fcl" 
#include "time_memory_tracker_microboone.fcl"
#include "litemc_wire.fcl"
#include "litemc_opreco.fcl"
#include "litemc_opdigit.fcl"

microboone_reco_data_services:
{
  PhotonVisibilityService:    @local::microboone_photonvisibilityservice
  OpDigiProperties:           @local::microboone_opdigiproperties
                              @table::microboone_services_reco
}

process_name: BNBNuSuperaLArLite

services:
{
  scheduler:               { defaultExceptions: false }    # Make all uncaught exceptions fatal.
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "data_hist.root" }
  TimeTracker:             @local::microboone_time_tracker
  MemoryTracker:           @local::microboone_memory_tracker
  RandomNumberGenerator:   {} #ART native random number generator                                                                                          
  message:                 @local::microboone_message_services_prod_debug
  FileCatalogMetadata:     @local::art_file_catalog_data
  LLMetaMaker: {Enable: true}
  #@table::microboone_reco_mcc7_services
  @table::microboone_reco_data_services
}

### This is the complete list of all producers! ###
services.UBOpReadoutMap: @local::microboone_opreadoutmap
services.DetectorPropertiesService.NumberTimeSamples:   6400
services.DetectorPropertiesService.ReadOutWindowSize:   6400
services.DetectorClocksService.InheritClockConfig:      false
services.DetectorClocksService.TriggerOffsetTPC:       -0.400e3

services.SignalShapingServiceMicroBooNE.FilterFuncVec:  [ "(x>0.0)*gaus", "(x>0.0)*gaus", "(x>0.0)*gaus" ]
services.SignalShapingServiceMicroBooNE.FilterParamsVec:   [ [ 1.0, 0.0, 0.1 ], [ 1.0, 0.0, 0.1 ], [ 1.0, 0.0, 0.1 ] ]
services.SignalShapingServiceMicroBooNE.FilterWidthCorrectionFactor: [ 0.738, 0.738, 0.738 ]
services.SignalShapingServiceMicroBooNE.StretchFullResponse: false

services.TimeTracker.printSummary: false
services.TimeTracker.dbOutput: {}

services.MemoryTracker.printSummaries: []
services.MemoryTracker.includeMallocInfo: false
services.MemoryTracker.filename: ""

services.DatabaseUtil.ShouldConnect: false

services.FileCatalogMetadata.applicationVersion: "develop"
services.FileCatalogMetadata.fileType: "data"
services.FileCatalogMetadata.runType: "physics"
services.FileCatalogMetadataMicroBooNE: {
  FCLName: "run_larlite_maker_mc.fcl"
  FCLVersion: "develop"
  ProjectName: "LiteMC"
  ProjectStage: "LiteMaker"
  ProjectVersion: "develop"
}

source:
{
  module_type: RootInput
  maxEvents:   10          # Number of events to create
#  inputCommands: ["drop recob::Wires_*_*_* "]
}

physics:
{

 producers:
 {
   saturation: @local::correct_saturation

   ophit:      @local::microboone_ophit_beam_highgain
   opflash:    @local::microboone_opflash_beam_highgain
   ophitSat:   @local::microboone_ophit_saturation
   opflashSat: @local::microboone_opflash_saturation

   digitfilter:  @local::microboone_rawdigitfilter
   caldata:      @local::microboone_calroi

   rns:       { module_type: "RandomNumberSaver" }
 }

 analyzers:
 {
   wire:    @local::litemc_wire
   opdigit: @local::litemc_opdigit
   opreco:  @local::litemc_opreco
 }

 reco: [ rns, digitfilter, caldata ]

 ana: [ wire, opdigit, opreco ]
 
 #stream1:  [ out1 ]
 stream1:  []

 trigger_paths: [reco]

 end_paths:     [stream1,ana]  
}

physics.producers.digitfilter.TruncateTicks: true

physics.producers.caldata.DigitModuleLabel: "digitfilter"
physics.producers.caldata.DodQdxCalib: true

physics.producers.saturation.CalibrationCorr : [1.013,1.020,1.013,1.005,0.996,0.995,1.004,0.958,0.942,0.981,0.925,0.961,0.956,0.935,0.999,0.966,
                                                1.026,0.982,1.032,1.008,0.977,0.964,1.014,0.974,0.976,1.010,1.048,0.981,0.999,0.979,0.993,1.001]

physics.analyzers.wire.stream:        "wire"
physics.analyzers.opdigit.stream:     "opdigit"
physics.analyzers.opreco.stream:      "opreco"

physics.analyzers.wire.out_filename:        "larlite_wire.root"
physics.analyzers.opdigit.out_filename:     "larlite_opdigit.root"
physics.analyzers.opreco.out_filename:      "larlite_opreco.root"

physics.analyzers.opreco.DataLookUpMap.ophit: ["ophit","ophitSat"]
physics.analyzers.opreco.DataLookUpMap.opflash: ["opflash","opflashSat"]

physics.analyzers.opreco.AssociationLookUpMap.ophit: ["ophit","ophitSat"]
physics.analyzers.opreco.AssociationLookUpMap.opflash: ["opflash","opflashSat"]

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "genie_gen.root" #default file name, can override from command line with -o or --output
   dataTier:    "generated"
   compressionLevel: 1
 }
}

