#include "services_microboone.fcl"
#include "trackfinderalgorithms.fcl"

process_name: KalmanFilterTest

services:
{
  @table::microboone_basic_services
}

source:
{
  module_type: EmptyEvent
  maxEvents:   0       # Number of events to create
}

outputs:
{
}

physics:
{

 analyzers:
 {
  kftest: { module_type: "KalmanFilterTest" }
 }

 #define the path for analyzer modules, order does not matter.
 #see lines starting physics.analyzers below
 ana:  [ kftest ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [ ] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [ana]  
}

physics.analyzers.kftest:
{
  module_type: "KalmanFilterTest"
  KalmanFilterAlg: @local::microboone_kalmanfilteralg
}
physics.analyzers.kftest.KalmanFilterAlg.Trace: true
